<testng-results>
  <reporter-output>
  </reporter-output>
  <suite name="asn1runtimetest by packages">
    <groups>
    </groups>
    <test name="org.asn1gen.runtime.codec.test">
      <class name="org.asn1gen.runtime.codec.test.TestBerDecoder2">
        <test-method status="PASS" signature="test_constructor_01()" name="test_constructor_01" duration-ms="46" started-at="2009-12-23T00:27:26Z" finished-at="2009-12-23T00:27:26Z">
        </test-method>
        <test-method status="PASS" signature="test_decodeTriplet_01()" name="test_decodeTriplet_01" duration-ms="9" started-at="2009-12-23T00:27:26Z" finished-at="2009-12-23T00:27:26Z">
        </test-method>
        <test-method status="PASS" signature="test_decode_AsnBoolean_00()" name="test_decode_AsnBoolean_00" duration-ms="6" started-at="2009-12-23T00:27:26Z" finished-at="2009-12-23T00:27:26Z">
        </test-method>
        <test-method status="PASS" signature="test_decode_AsnBoolean_01()" name="test_decode_AsnBoolean_01" duration-ms="2" started-at="2009-12-23T00:27:26Z" finished-at="2009-12-23T00:27:26Z">
        </test-method>
        <test-method status="PASS" signature="test_decode_AsnBoolean_02()" name="test_decode_AsnBoolean_02" duration-ms="2" started-at="2009-12-23T00:27:26Z" finished-at="2009-12-23T00:27:26Z">
        </test-method>
        <test-method status="PASS" signature="test_decode_AsnInteger_00()" name="test_decode_AsnInteger_00" duration-ms="10" started-at="2009-12-23T00:27:26Z" finished-at="2009-12-23T00:27:26Z">
        </test-method>
        <test-method status="PASS" signature="test_decode_AsnNull_00()" name="test_decode_AsnNull_00" duration-ms="3" started-at="2009-12-23T00:27:26Z" finished-at="2009-12-23T00:27:26Z">
        </test-method>
        <test-method status="PASS" signature="test_readTripleWindow_00()" name="test_readTripleWindow_00" duration-ms="5" started-at="2009-12-23T00:27:26Z" finished-at="2009-12-23T00:27:26Z">
        </test-method>
        <test-method status="PASS" signature="test_readTripleWindow_01()" name="test_readTripleWindow_01" duration-ms="2" started-at="2009-12-23T00:27:26Z" finished-at="2009-12-23T00:27:26Z">
        </test-method>
        <test-method status="PASS" signature="test_readTripleWindow_02()" name="test_readTripleWindow_02" duration-ms="4" started-at="2009-12-23T00:27:26Z" finished-at="2009-12-23T00:27:26Z">
        </test-method>
        <test-method status="PASS" signature="test_readTripleWindow_03()" name="test_readTripleWindow_03" duration-ms="3" started-at="2009-12-23T00:27:26Z" finished-at="2009-12-23T00:27:26Z">
        </test-method>
        <test-method status="PASS" signature="test_readTripleWindow_04()" name="test_readTripleWindow_04" duration-ms="5" started-at="2009-12-23T00:27:26Z" finished-at="2009-12-23T00:27:26Z">
        </test-method>
        <test-method status="PASS" signature="test_readTripleWindow_05()" name="test_readTripleWindow_05" duration-ms="2" started-at="2009-12-23T00:27:26Z" finished-at="2009-12-23T00:27:26Z">
        </test-method>
        <test-method status="PASS" signature="test_readTripleWindow_06()" name="test_readTripleWindow_06" duration-ms="2" started-at="2009-12-23T00:27:26Z" finished-at="2009-12-23T00:27:26Z">
        </test-method>
        <test-method status="FAIL" signature="test_readTripleWindow_07()" name="test_readTripleWindow_07" duration-ms="15" started-at="2009-12-23T00:27:26Z" finished-at="2009-12-23T00:27:26Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[(length = 3) == (readLength == 2)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: (length = 3) == (readLength == 2)
	at org.asn1gen.runtime.codec.BerDecoderReader.readTripletWindow(BerDecoderReader.scala:42)
	at org.asn1gen.runtime.codec.test.TestBerDecoder2.test_readTripleWindow_07(TestBerDecoder2.scala:186)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:644)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:546)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:700)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1002)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:908)
	at org.testng.TestRunner.privateRun(TestRunner.java:617)
	at org.testng.TestRunner.run(TestRunner.java:498)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:329)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:324)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:296)
	at org.testng.SuiteRunner.run(SuiteRunner.java:201)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:915)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:879)
	at org.testng.TestNG.run(TestNG.java:787)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:75)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:127)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="test_scalaStream_01()" name="test_scalaStream_01" duration-ms="6" started-at="2009-12-23T00:27:26Z" finished-at="2009-12-23T00:27:26Z">
        </test-method>
      </class>
    </test>
  </suite>
</testng-results>
